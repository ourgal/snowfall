From 8c5eb40c103b10b6b0eece81875db6c1c88addc8 Mon Sep 17 00:00:00 2001
From: liutianyu1250 <liutianyu1250@phytium.com.cn>
Date: Fri, 30 May 2025 11:41:46 +0800
Subject: [PATCH 47/67] PHYTIUM: net: phytmac: update to 1.0.47

Signed-off-by: liutianyu1250 <liutianyu1250@phytium.com.cn>

Link: https://gitee.com/phytium_embedded/phytium-linux-kernel/commit/f12de776aa34dbdc7e389542ade8a67325d18925
Signed-off-by: Kexy Biscuit <kexybiscuit@aosc.io>
---
 drivers/net/ethernet/phytium/phytmac.h          |  8 +++++---
 drivers/net/ethernet/phytium/phytmac_ethtool.c  |  9 ++++++---
 drivers/net/ethernet/phytium/phytmac_main.c     | 17 ++++++++++++++---
 drivers/net/ethernet/phytium/phytmac_pci.c      |  4 ++--
 drivers/net/ethernet/phytium/phytmac_platform.c |  2 +-
 drivers/net/ethernet/phytium/phytmac_v1.c       |  2 +-
 drivers/net/ethernet/phytium/phytmac_v2.c       |  2 +-
 drivers/net/ethernet/phytium/phytmac_v2.h       |  2 +-
 8 files changed, 31 insertions(+), 15 deletions(-)

diff --git a/drivers/net/ethernet/phytium/phytmac.h b/drivers/net/ethernet/phytium/phytmac.h
index 09e3c99232d3..ee22cda030e9 100644
--- a/drivers/net/ethernet/phytium/phytmac.h
+++ b/drivers/net/ethernet/phytium/phytmac.h
@@ -14,9 +14,10 @@
 #include <linux/etherdevice.h>
 #include <net/xdp.h>

-#define PHYTMAC_DRV_NAME		"phytium-mac"
+#define PHYTMAC_PCI_DRV_NAME		"phytmac_pci"
+#define PHYTMAC_PLAT_DRV_NAME		"phytmac_platform"
 #define PHYTMAC_DRV_DESC		"PHYTIUM Ethernet Driver"
-#define PHYTMAC_DRIVER_VERSION		"1.0.45"
+#define PHYTMAC_DRIVER_VERSION		"1.0.47"
 #define PHYTMAC_DEFAULT_MSG_ENABLE	  \
 		(NETIF_MSG_DRV		| \
 		NETIF_MSG_PROBE	| \
@@ -54,7 +55,7 @@

 #define DEFAULT_MSG_RING_SIZE	16

-#define PHYTMAC_MDIO_TIMEOUT   1000000 /* in usecs */
+#define PHYTMAC_MDIO_TIMEOUT	1000000 /* in usecs */

 #define PHYTMAC_CAPS_JUMBO			0x00000001
 #define PHYTMAC_CAPS_PTP			0x00000002
@@ -510,6 +511,7 @@ struct phytmac {
 	spinlock_t			rx_fs_lock;
 	unsigned int			max_rx_fs;
 	u32						version;
+	char				fw_version[32];
 };

 /* phytmac_desc_unused - calculate if we have unused descriptors */
diff --git a/drivers/net/ethernet/phytium/phytmac_ethtool.c b/drivers/net/ethernet/phytium/phytmac_ethtool.c
index bac59327087f..26478b090ced 100644
--- a/drivers/net/ethernet/phytium/phytmac_ethtool.c
+++ b/drivers/net/ethernet/phytium/phytmac_ethtool.c
@@ -506,13 +506,16 @@ static void phytmac_get_drvinfo(struct net_device *ndev, struct ethtool_drvinfo
 {
 	struct phytmac *pdata = netdev_priv(ndev);

-	strscpy(drvinfo->driver, PHYTMAC_DRV_NAME, sizeof(drvinfo->driver));
 	strscpy(drvinfo->version, PHYTMAC_DRIVER_VERSION, sizeof(drvinfo->version));
+	strscpy(drvinfo->fw_version, pdata->fw_version, sizeof(drvinfo->fw_version));

-	if (pdata->platdev)
+	if (pdata->platdev) {
+		strscpy(drvinfo->driver, PHYTMAC_PLAT_DRV_NAME, sizeof(drvinfo->driver));
 		strscpy(drvinfo->bus_info, pdata->platdev->name, sizeof(drvinfo->bus_info));
-	else if (pdata->pcidev)
+	} else if (pdata->pcidev) {
+		strscpy(drvinfo->driver, PHYTMAC_PCI_DRV_NAME, sizeof(drvinfo->driver));
 		strscpy(drvinfo->bus_info, pci_name(pdata->pcidev), sizeof(drvinfo->bus_info));
+	}
 }

 static const struct ethtool_ops phytmac_ethtool_ops = {
diff --git a/drivers/net/ethernet/phytium/phytmac_main.c b/drivers/net/ethernet/phytium/phytmac_main.c
index eeaf60a6e9cd..9ed5ec09523b 100644
--- a/drivers/net/ethernet/phytium/phytmac_main.c
+++ b/drivers/net/ethernet/phytium/phytmac_main.c
@@ -62,7 +62,7 @@ MODULE_PARM_DESC(debug, "Debug level (0=none,...,16=all)");

 /* Max length of transmit frame must be a multiple of 8 bytes */
 #define PHYTMAC_TX_LEN_ALIGN		8
-/* Limit maximum TX length as per Cadence TSO errata. This is to avoid a
+/* Limit maximum TX length as per TSO errata. This is to avoid a
  * false amba_error in TX path from the DMA assuming there is not enough
  * space in the SRAM (16KB) even when there is.
  */
@@ -584,7 +584,8 @@ static int phytmac_alloc_rx_resource(struct phytmac *pdata)
 		}

 		xdp_rxq_info_unreg_mem_model(&queue->xdp_rxq);
-		WARN_ON(xdp_rxq_info_reg_mem_model(&queue->xdp_rxq, MEM_TYPE_PAGE_SHARED, NULL));
+		WARN_ON(xdp_rxq_info_reg_mem_model(&queue->xdp_rxq,
+						   MEM_TYPE_PAGE_SHARED, NULL));
 	}

 	return 0;
@@ -2684,6 +2685,16 @@ void phytmac_default_config(struct phytmac *pdata)

 	ndev->features = ndev->hw_features;
 	ndev->xdp_features = NETDEV_XDP_ACT_BASIC | NETDEV_XDP_ACT_REDIRECT;
+
+	switch (pdata->version) {
+	case VERSION_V3:
+		strscpy(pdata->fw_version, "MAC_FTM300", sizeof(pdata->fw_version));
+		break;
+
+	default:
+		strscpy(pdata->fw_version, "", sizeof(pdata->fw_version));
+		break;
+	}
 }

 static void phytmac_ncsi_handler(struct ncsi_dev *nd)
@@ -2835,8 +2846,8 @@ int phytmac_drv_suspend(struct phytmac *pdata)
 		rtnl_unlock();
 		spin_lock_irqsave(&pdata->lock, flags);
 		hw_if->reset_hw(pdata);
-		hw_if->poweron(pdata, PHYTMAC_POWEROFF);
 		spin_unlock_irqrestore(&pdata->lock, flags);
+		hw_if->poweron(pdata, PHYTMAC_POWEROFF);
 	}

 	return 0;
diff --git a/drivers/net/ethernet/phytium/phytmac_pci.c b/drivers/net/ethernet/phytium/phytmac_pci.c
index 62766c49d1a6..fac5d717ad76 100644
--- a/drivers/net/ethernet/phytium/phytmac_pci.c
+++ b/drivers/net/ethernet/phytium/phytmac_pci.c
@@ -74,7 +74,7 @@ static int phytmac_pci_probe(struct pci_dev *pdev, const struct pci_device_id *i

 	/* Obtain the mmio areas for the device */
 	bar_mask = pci_select_bars(pdev, IORESOURCE_MEM);
-	ret = pcim_iomap_regions(pdev, bar_mask, PHYTMAC_DRV_NAME);
+	ret = pcim_iomap_regions(pdev, bar_mask, PHYTMAC_PCI_DRV_NAME);
 	if (ret) {
 		dev_err(dev, "pcim_iomap_regions failed\n");
 		goto err_pci_enable;
@@ -305,7 +305,7 @@ static const struct dev_pm_ops phytmac_pci_pm_ops = {
 };

 static struct pci_driver phytmac_driver = {
-	.name = PHYTMAC_DRV_NAME,
+	.name = PHYTMAC_PCI_DRV_NAME,
 	.id_table = phytmac_pci_table,
 	.probe = phytmac_pci_probe,
 	.remove = phytmac_pci_remove,
diff --git a/drivers/net/ethernet/phytium/phytmac_platform.c b/drivers/net/ethernet/phytium/phytmac_platform.c
index 540159f8fc3a..2f2170cf0775 100644
--- a/drivers/net/ethernet/phytium/phytmac_platform.c
+++ b/drivers/net/ethernet/phytium/phytmac_platform.c
@@ -356,7 +356,7 @@ static struct platform_driver phytmac_driver = {
 	.probe = phytmac_plat_probe,
 	.remove = phytmac_plat_remove,
 	.driver = {
-		.name = PHYTMAC_DRV_NAME,
+		.name = PHYTMAC_PLAT_DRV_NAME,
 		.of_match_table = of_match_ptr(phytmac_dt_ids),
 		.acpi_match_table = phytmac_acpi_ids,
 		.pm = &phytmac_plat_pm_ops,
diff --git a/drivers/net/ethernet/phytium/phytmac_v1.c b/drivers/net/ethernet/phytium/phytmac_v1.c
index 515825627fed..870f07edc58f 100644
--- a/drivers/net/ethernet/phytium/phytmac_v1.c
+++ b/drivers/net/ethernet/phytium/phytmac_v1.c
@@ -564,7 +564,7 @@ static int phytmac_mdio_idle(struct phytmac *pdata)
 	int ret;

 	/* wait for end of transfer */
-	ret = readx_poll_timeout(PHTMAC_READ_NSTATUS, pdata, val, val & PHYTMAC_BIT(NDI_IDLE),
+	ret = readx_poll_timeout(PHYTMAC_READ_NSTATUS, pdata, val, val & PHYTMAC_BIT(MDIO_IDLE),
 				 1, PHYTMAC_MDIO_TIMEOUT);
 	if (ret)
 		netdev_err(pdata->ndev, "mdio wait for idle time out!");
diff --git a/drivers/net/ethernet/phytium/phytmac_v2.c b/drivers/net/ethernet/phytium/phytmac_v2.c
index 20c49bf5f4b8..1afff67d625d 100644
--- a/drivers/net/ethernet/phytium/phytmac_v2.c
+++ b/drivers/net/ethernet/phytium/phytmac_v2.c
@@ -453,7 +453,7 @@ static int phytmac_v2_mdio_idle(struct phytmac *pdata)
 	int ret;

 	/* wait for end of transfer */
-	ret = readx_poll_timeout(PHTMAC_READ_NSTATUS, pdata, val, val & PHYTMAC_BIT(NDI_IDLE),
+	ret = readx_poll_timeout(PHYTMAC_READ_NSR, pdata, val, val & PHYTMAC_BIT(MIDLE),
 				 1, PHYTMAC_MDIO_TIMEOUT);
 	if (ret)
 		netdev_err(pdata->ndev, "mdio wait for idle time out!");
diff --git a/drivers/net/ethernet/phytium/phytmac_v2.h b/drivers/net/ethernet/phytium/phytmac_v2.h
index b32044d696ae..c9e159b1eb9b 100644
--- a/drivers/net/ethernet/phytium/phytmac_v2.h
+++ b/drivers/net/ethernet/phytium/phytmac_v2.h
@@ -248,7 +248,7 @@ extern struct phytmac_hw_if phytmac_2p0_hw;

 #define PHYTMAC_RETRY_TIMES	50000

-#define PHYTMAC_READ_NSR(pdata)        PHYTMAC_READ(pdata, PHYTMAC_NETWORK_STATUS)
+#define PHYTMAC_READ_NSR(pdata)	PHYTMAC_READ(pdata, PHYTMAC_NETWORK_STATUS)

 enum phytmac_msg_cmd_id {
 	PHYTMAC_MSG_CMD_DEFAULT = 0,
--
2.50.1

From 8a6dc80b8537c1677a0334bf8cdbed7dd5507ca7 Mon Sep 17 00:00:00 2001
From: Li Wencheng <liwencheng@phytium.com.cn>
Date: Thu, 27 Jun 2024 10:09:53 +0800
Subject: [PATCH 26/67] PHYTIUM: net/phytmac: Adapt interface type 2500BASE-x

Add 2500BASE-x interface type support for phytmac driver.

Mainline: NA
Signed-off-by: Li Wencheng <liwencheng@phytium.com.cn>
Signed-off-by: Wang Yinfeng <wangyinfeng@phytium.com.cn>
Change-Id: I9e0f81c8c9224a89be17714fb8a1b2905499f8bf

Link: https://gitee.com/phytium_embedded/phytium-linux-kernel/commit/e1983bd12b88ce9b07660251c9d73d400cbab2e0
Signed-off-by: Kexy Biscuit <kexybiscuit@aosc.io>
---
 drivers/net/ethernet/phytium/phytmac.h      |  2 +-
 drivers/net/ethernet/phytium/phytmac_main.c | 10 +++++++---
 drivers/net/ethernet/phytium/phytmac_v1.c   | 21 +++++++++++++++------
 3 files changed, 23 insertions(+), 10 deletions(-)

diff --git a/drivers/net/ethernet/phytium/phytmac.h b/drivers/net/ethernet/phytium/phytmac.h
index bc0d2670c2f5..a4e0d4e4fa1f 100644
--- a/drivers/net/ethernet/phytium/phytmac.h
+++ b/drivers/net/ethernet/phytium/phytmac.h
@@ -13,7 +13,7 @@

 #define PHYTMAC_DRV_NAME		"phytium-mac"
 #define PHYTMAC_DRV_DESC		"PHYTIUM Ethernet Driver"
-#define PHYTMAC_DRIVER_VERSION		"1.0.3"
+#define PHYTMAC_DRIVER_VERSION		"1.0.4"
 #define PHYTMAC_DEFAULT_MSG_ENABLE	  \
 		(NETIF_MSG_DRV		| \
 		NETIF_MSG_PROBE	| \
diff --git a/drivers/net/ethernet/phytium/phytmac_main.c b/drivers/net/ethernet/phytium/phytmac_main.c
index 732358ea40af..43c15b8baf0b 100644
--- a/drivers/net/ethernet/phytium/phytmac_main.c
+++ b/drivers/net/ethernet/phytium/phytmac_main.c
@@ -1726,6 +1726,9 @@ static void phytmac_mac_link_up(struct phylink_config *config,
 		pdata->pause = rx_pause;
 	}

+	pdata->speed = speed;
+	pdata->duplex = duplex;
+
 	phytmac_init_ring(pdata);

 	for (q = 0, queue = pdata->queues; q < pdata->queues_num; ++q, ++queue)
@@ -1844,11 +1847,12 @@ static void phytmac_validate(struct phylink_config *config,
 	if (state->interface == PHY_INTERFACE_MODE_5GBASER)
 		phylink_set(mask, 5000baseT_Full);

-	if (state->interface == PHY_INTERFACE_MODE_1000BASEX ||
-	    state->interface == PHY_INTERFACE_MODE_SGMII ||
+	if (state->interface == PHY_INTERFACE_MODE_1000BASEX)
+		phylink_set(mask, 1000baseX_Full);
+
+	if (state->interface == PHY_INTERFACE_MODE_SGMII ||
 	    phy_interface_mode_is_rgmii(state->interface)) {
 		phylink_set(mask, 1000baseT_Full);
-		phylink_set(mask, 1000baseX_Full);
 		phylink_set(mask, 1000baseT_Half);
 		phylink_set(mask, 10baseT_Half);
 		phylink_set(mask, 10baseT_Full);
diff --git a/drivers/net/ethernet/phytium/phytmac_v1.c b/drivers/net/ethernet/phytium/phytmac_v1.c
index 20595aca1783..72a6eeaec356 100644
--- a/drivers/net/ethernet/phytium/phytmac_v1.c
+++ b/drivers/net/ethernet/phytium/phytmac_v1.c
@@ -1078,12 +1078,15 @@ static void phytmac_mac_interface_config(struct phytmac *pdata, unsigned int mod
 		config |= PHYTMAC_BIT(SGMII_EN) | PHYTMAC_BIT(PCS_EN);
 		if (state->speed == SPEED_1000)
 			config |= PHYTMAC_BIT(GM_EN);
-		else if (state->speed == SPEED_2500)
-			config |= PHYTMAC_BIT(2PT5G);
+		else if (state->speed == SPEED_2500) {
+			ctrl |= PHYTMAC_BIT(2PT5G);
+			config |= PHYTMAC_BIT(GM_EN);
+		}
 	} else if (state->interface == PHY_INTERFACE_MODE_1000BASEX) {
 		config |= PHYTMAC_BIT(PCS_EN) | PHYTMAC_BIT(GM_EN);
 	} else if (state->interface == PHY_INTERFACE_MODE_2500BASEX) {
-		config |= PHYTMAC_BIT(2PT5G) | PHYTMAC_BIT(PCS_EN);
+		ctrl |= PHYTMAC_BIT(2PT5G);
+		config |= PHYTMAC_BIT(PCS_EN) | PHYTMAC_BIT(GM_EN);
 	} else if (state->interface == PHY_INTERFACE_MODE_10GBASER ||
 		   state->interface == PHY_INTERFACE_MODE_USXGMII ||
 		   state->interface == PHY_INTERFACE_MODE_5GBASER) {
@@ -1111,11 +1114,17 @@ static void phytmac_mac_interface_config(struct phytmac *pdata, unsigned int mod
 	if (old_config ^ config)
 		PHYTMAC_WRITE(pdata, PHYTMAC_NCONFIG, config);

-	/* Disable AN for SGMII fixed link configuration, enable otherwise.*/
-	if (state->interface == PHY_INTERFACE_MODE_SGMII)
-		phytmac_enable_autoneg(pdata, mode == MLO_AN_FIXED ? 0 : 1);
+	/* Disable AN for SGMII fixed link or speed equal to 2.5G, enable otherwise.*/
+	if (state->interface == PHY_INTERFACE_MODE_SGMII) {
+		if (state->speed == SPEED_2500 || mode == MLO_AN_FIXED)
+			phytmac_enable_autoneg(pdata, 0);
+		else
+			phytmac_enable_autoneg(pdata, 1);
+	}
 	if (state->interface == PHY_INTERFACE_MODE_1000BASEX)
 		phytmac_enable_autoneg(pdata, 1);
+	if (state->interface == PHY_INTERFACE_MODE_2500BASEX)
+		phytmac_enable_autoneg(pdata, 0);
 }

 static unsigned int phytmac_pcs_get_link(struct phytmac *pdata,
--
2.50.1

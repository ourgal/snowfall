From 6de63e217a9c77aa6eec23cd3409ea9fe5fcffbc Mon Sep 17 00:00:00 2001
From: Li Wencheng <liwencheng@phytium.com.cn>
Date: Thu, 27 Jun 2024 10:15:06 +0800
Subject: [PATCH 27/67] PHYTIUM: net/phytmac: Support WOL interaction with BIOS

It should notify the BIOS to enable or disable the WOL function.
This patch adds support for it.

Mainline: NA
Signed-off-by: Li Wencheng <liwencheng@phytium.com.cn>
Signed-off-by: Wang Yinfeng <wangyinfeng@phytium.com.cn>
Change-Id: I1c900bc38faff9d0054c38329e55df8dd16e8d28

Link: https://gitee.com/phytium_embedded/phytium-linux-kernel/commit/4c06f35e7d80ce9c350cfcfe8f35ec66326a12c0
Signed-off-by: Kexy Biscuit <kexybiscuit@aosc.io>
---
 drivers/net/ethernet/phytium/phytmac.h        |  3 +-
 .../net/ethernet/phytium/phytmac_ethtool.c    |  1 +
 drivers/net/ethernet/phytium/phytmac_main.c   | 34 +++++++++++++++++++
 3 files changed, 37 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/phytium/phytmac.h b/drivers/net/ethernet/phytium/phytmac.h
index a4e0d4e4fa1f..df4ec49a0851 100644
--- a/drivers/net/ethernet/phytium/phytmac.h
+++ b/drivers/net/ethernet/phytium/phytmac.h
@@ -13,7 +13,7 @@

 #define PHYTMAC_DRV_NAME		"phytium-mac"
 #define PHYTMAC_DRV_DESC		"PHYTIUM Ethernet Driver"
-#define PHYTMAC_DRIVER_VERSION		"1.0.4"
+#define PHYTMAC_DRIVER_VERSION		"1.0.5"
 #define PHYTMAC_DEFAULT_MSG_ENABLE	  \
 		(NETIF_MSG_DRV		| \
 		NETIF_MSG_PROBE	| \
@@ -607,4 +607,5 @@ int phytmac_drv_resume(struct phytmac *pdata);
 struct phytmac *phytmac_alloc_pdata(struct device *dev);
 void phytmac_free_pdata(struct phytmac *pdata);
 int phytmac_reset_ringsize(struct phytmac *pdata, u32 rx_size, u32 tx_size);
+void phytmac_set_bios_wol_enable(struct phytmac *pdata, u32 wol);
 #endif
diff --git a/drivers/net/ethernet/phytium/phytmac_ethtool.c b/drivers/net/ethernet/phytium/phytmac_ethtool.c
index a97a4c28c04f..306a9934deab 100644
--- a/drivers/net/ethernet/phytium/phytmac_ethtool.c
+++ b/drivers/net/ethernet/phytium/phytmac_ethtool.c
@@ -131,6 +131,7 @@ static int phytmac_set_wol(struct net_device *ndev, struct ethtool_wolinfo *wol)
 		pdata->wol |= PHYTMAC_WAKE_MCAST;

 	device_set_wakeup_enable(pdata->dev, pdata->wol ? 1 : 0);
+	phytmac_set_bios_wol_enable(pdata, pdata->wol ? 1 : 0);

 	return 0;
 }
diff --git a/drivers/net/ethernet/phytium/phytmac_main.c b/drivers/net/ethernet/phytium/phytmac_main.c
index 43c15b8baf0b..fd29c647e277 100644
--- a/drivers/net/ethernet/phytium/phytmac_main.c
+++ b/drivers/net/ethernet/phytium/phytmac_main.c
@@ -111,6 +111,8 @@ static int phytmac_set_mac_address(struct net_device *netdev, void *addr)

 	hw_if->set_mac_address(pdata, saddr->sa_data);

+	phytmac_set_bios_wol_enable(pdata, pdata->wol ? 1 : 0);
+
 	return 0;
 }

@@ -1971,6 +1973,7 @@ static int phytmac_open(struct net_device *ndev)
 	}

 	phylink_start(pdata->phylink);
+	phytmac_set_bios_wol_enable(pdata, pdata->wol ? 1 : 0);

 	netif_tx_start_all_queues(pdata->ndev);

@@ -2121,6 +2124,37 @@ static netdev_features_t phytmac_features_check(struct sk_buff *skb,
 	return features;
 }

+void phytmac_set_bios_wol_enable(struct phytmac *pdata, u32 wol)
+{
+	struct net_device *ndev = pdata->ndev;
+
+	if (ndev->phydev) {
+#ifdef CONFIG_ACPI
+		if (has_acpi_companion(pdata->dev)) {
+			acpi_handle handle = ACPI_HANDLE(pdata->dev);
+
+			if (acpi_has_method(handle, "PWOL")) {
+				union acpi_object args[] = {
+					{ .type = ACPI_TYPE_INTEGER, },
+				};
+				struct acpi_object_list arg_input = {
+					.pointer = args,
+					.count = ARRAY_SIZE(args),
+				};
+				acpi_status status;
+
+				/* Set the input parameters */
+				args[0].integer.value = wol;
+
+				status = acpi_evaluate_object(handle, "PWOL", &arg_input, NULL);
+				if (ACPI_FAILURE(status))
+					netdev_err(ndev, "The PWOL method failed to be executed.\n");
+			}
+		}
+#endif
+	}
+}
+
 int phytmac_reset_ringsize(struct phytmac *pdata, u32 rx_size, u32 tx_size)
 {
 	int ret = 0;
--
2.50.1

From 7efca1a804a8062585054c87bee55a22f35114a4 Mon Sep 17 00:00:00 2001
From: Li Wencheng <liwencheng@phytium.com.cn>
Date: Wed, 7 May 2025 17:22:13 +0800
Subject: [PATCH 45/67] PHYTIUM: net/phytmac: BugFix Memory leak when releasing
 resource

The size of the memory released in the dma_free_coherent is smaller
than the size of the memory allocated in the dma_alloc_coherent,
which will lead to memory leakage and fragmentation.

Signed-off-by: Li Wencheng <liwencheng@phytium.com.cn>
Signed-off-by: Wang Yinfeng <wangyinfeng@phytium.com.cn>
Change-Id: If06e83aec976cc485829b8e75d07e22ae7c6cfae

Link: https://gitee.com/phytium_embedded/phytium-linux-kernel/commit/93ba71759d83f0122e818867a56bffcdc31f278d
Signed-off-by: Kexy Biscuit <kexybiscuit@aosc.io>
---
 drivers/net/ethernet/phytium/phytmac.h      |  3 ---
 drivers/net/ethernet/phytium/phytmac_main.c | 12 ++++++++----
 2 files changed, 8 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/phytium/phytmac.h b/drivers/net/ethernet/phytium/phytmac.h
index 6b72b45bc0d4..09e3c99232d3 100644
--- a/drivers/net/ethernet/phytium/phytmac.h
+++ b/drivers/net/ethernet/phytium/phytmac.h
@@ -114,9 +114,6 @@
 #define PHYTMAC_MSG_READ(_pdata, _reg)					\
 	__raw_readl((_pdata)->mac_regs + (_reg))

-#define PHYTMAC_WRITE(_pdata, _reg, _val)				\
-	__raw_writel((_val), (_pdata)->mac_regs + (_reg))
-
 #define LSO_UFO		1
 #define LSO_TSO		2

diff --git a/drivers/net/ethernet/phytium/phytmac_main.c b/drivers/net/ethernet/phytium/phytmac_main.c
index c32dd959cca5..eeaf60a6e9cd 100644
--- a/drivers/net/ethernet/phytium/phytmac_main.c
+++ b/drivers/net/ethernet/phytium/phytmac_main.c
@@ -391,6 +391,7 @@ static int phytmac_free_tx_resource(struct phytmac *pdata)
 	struct phytmac_dma_desc *tx_ring_base = NULL;
 	dma_addr_t tx_ring_base_addr;
 	unsigned int q;
+	int tx_offset;
 	int size;

 	queue = pdata->queues;
@@ -408,8 +409,9 @@ static int phytmac_free_tx_resource(struct phytmac *pdata)
 	}

 	if (tx_ring_base) {
-		size = pdata->queues_num * (TX_RING_BYTES(pdata) + pdata->tx_bd_prefetch +
-					    RING_ADDR_INTERVAL);
+		tx_offset = TX_RING_BYTES(pdata) + pdata->tx_bd_prefetch + RING_ADDR_INTERVAL;
+		tx_offset = ALIGN(tx_offset, 4096);
+		size = pdata->queues_num * tx_offset;
 		dma_free_coherent(pdata->dev, size, tx_ring_base, tx_ring_base_addr);
 	}

@@ -422,6 +424,7 @@ static int phytmac_free_rx_resource(struct phytmac *pdata)
 	struct phytmac_dma_desc *rx_ring_base = NULL;
 	dma_addr_t rx_ring_base_addr;
 	unsigned int q;
+	int rx_offset;
 	int size;

 	queue = pdata->queues;
@@ -448,8 +451,9 @@ static int phytmac_free_rx_resource(struct phytmac *pdata)
 	}

 	if (rx_ring_base) {
-		size = pdata->queues_num * (RX_RING_BYTES(pdata) + pdata->rx_bd_prefetch +
-					    RING_ADDR_INTERVAL);
+		rx_offset = RX_RING_BYTES(pdata) + pdata->rx_bd_prefetch + RING_ADDR_INTERVAL;
+		rx_offset = ALIGN(rx_offset, 4096);
+		size = pdata->queues_num * rx_offset;
 		dma_free_coherent(pdata->dev, size, rx_ring_base, rx_ring_base_addr);
 	}

--
2.50.1

--- {commit-msg: {jobs: [group: {jobs: [{name: commitmsgfmt, run: 'commitmsgfmt-wrapper
{1}'}, {name: commitizen, run: 'cz check --commit-msg-file {1}'}]}]}, output: true,
pre-commit: {jobs: [{group: {jobs: [{glob: '*.toml', name: toml, run: 'taplo fmt {staged_files}',
stage_fixed: true}, {glob: '*.json', name: json, run: 'fixjson -w {staged_files}',
stage_fixed: true}, {glob: '*.{yaml,yml}', name: yaml, run: 'yamlfix {staged_files}',
stage_fixed: true}, {glob: '*.lua', name: lua, run: 'stylua {staged_files}', stage_fixed: true},
   {glob: '*.fnl', name: fennel, run: 'fnlfmt --fix {staged_files}', stage_fixed: true},
   {glob: '*.md', name: markdown, run: 'prettier --parser markdown --write {staged_files}
&& autocorrect --fix --quiet {staged_files}', stage_fixed: true}, {glob: '*.sh', name: bash,
run: 'shfmt -s -w {staged_files}', stage_fixed: true}, {glob: '*.go', name: go, run: 'gofmt
-w {staged_files}', stage_fixed: true}, {glob: justfile, name: justfile, run: 'just
--fmt --unstable -f {staged_files}', stage_fixed: true}, {glob: '*.nix', name: nix,
run: 'nixfmt --strict {staged_files}', stage_fixed: true}, {glob: '*.py', name: python,
run: 'ruff check --fix {staged_files} && ruff format {staged_files}', stage_fixed: true},
   {glob: Makefile, name: makefile, run: 'checkmake {staged_files}'}, {glob: .editorconfig,
name: editorconfig, run: 'validator {staged_files}'}], parallel: true}, name: default},
   {group: {jobs: [{glob: '*.nix', name: deadnix, run: 'deadnix -eq {staged_files}',
stage_fixed: true}, {glob: '*.nix', name: keep-sorted, run: 'keep-sorted --mode fix
{staged_files}', stage_fixed: true}]}, name: nix}, {group: {jobs: [{glob: '*.py',
name: pyupgrade, run: 'pyupgrade --py312-plus {staged_files}', stage_fixed: true},
   {glob: pyproject.toml, name: uv-sort, run: 'uv-sort {staged_files}', stage_fixed: true}]},
name: python}, {group: {jobs: [{exclude: '*.{gpg,png,jpg,jpeg,webp,gif,dat,age,mp3,mp4,mkv,ttf,ico,xcf,ogg,zip,tar.gz}',
file_types: text, run: "whitespace-format --remove-trailing-whitespace --remove-trailing-empty-lines\
\ {staged_files}\n", stage_fixed: true}]}, name: whitespace}, {group: {jobs: [{glob: '*.{xml,csv,ini,json,toml,yaml,yml}',
run: 'validator {staged_files}'}]}, name: config-file-validator}, {group: {jobs: [
   run: gitleaks protect -v --staged]}, name: check-secrets}]}}
